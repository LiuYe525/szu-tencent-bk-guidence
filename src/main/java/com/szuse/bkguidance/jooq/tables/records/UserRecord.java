/*
 * This file is generated by jOOQ.
 */
package com.szuse.bkguidance.jooq.tables.records;

import com.szuse.bkguidance.jooq.tables.User;
import com.szuse.bkguidance.jooq.tables.interfaces.IUser;
import java.time.LocalDate;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UserRecord extends UpdatableRecordImpl<UserRecord>
    implements Record9<Long, String, String, String, String, String, LocalDate, LocalDate, Boolean>,
        IUser {

  private static final long serialVersionUID = 1L;

  /** Create a detached UserRecord */
  public UserRecord() {
    super(User.USER);
  }

  /** Create a detached, initialised UserRecord */
  public UserRecord(
      Long id,
      String email,
      String username,
      String account,
      String password,
      String avatar,
      LocalDate createTime,
      LocalDate updateTime,
      Boolean deleted) {
    super(User.USER);

    setId(id);
    setEmail(email);
    setUsername(username);
    setAccount(account);
    setPassword(password);
    setAvatar(avatar);
    setCreateTime(createTime);
    setUpdateTime(updateTime);
    setDeleted(deleted);
    resetChangedOnNotNull();
  }

  /** Create a detached, initialised UserRecord */
  public UserRecord(com.szuse.bkguidance.jooq.tables.pojos.User value) {
    super(User.USER);

    if (value != null) {
      setId(value.getId());
      setEmail(value.getEmail());
      setUsername(value.getUsername());
      setAccount(value.getAccount());
      setPassword(value.getPassword());
      setAvatar(value.getAvatar());
      setCreateTime(value.getCreateTime());
      setUpdateTime(value.getUpdateTime());
      setDeleted(value.getDeleted());
      resetChangedOnNotNull();
    }
  }

  /** Getter for <code>public.user.id</code>. userId */
  @Override
  public Long getId() {
    return (Long) get(0);
  }

  /** Setter for <code>public.user.id</code>. userId */
  @Override
  public void setId(Long value) {
    set(0, value);
  }

  /** Getter for <code>public.user.email</code>. email */
  @Override
  public String getEmail() {
    return (String) get(1);
  }

  /** Setter for <code>public.user.email</code>. email */
  @Override
  public void setEmail(String value) {
    set(1, value);
  }

  /** Getter for <code>public.user.username</code>. username */
  @Override
  public String getUsername() {
    return (String) get(2);
  }

  /** Setter for <code>public.user.username</code>. username */
  @Override
  public void setUsername(String value) {
    set(2, value);
  }

  /** Getter for <code>public.user.account</code>. account */
  @Override
  public String getAccount() {
    return (String) get(3);
  }

  /** Setter for <code>public.user.account</code>. account */
  @Override
  public void setAccount(String value) {
    set(3, value);
  }

  /** Getter for <code>public.user.password</code>. password */
  @Override
  public String getPassword() {
    return (String) get(4);
  }

  /** Setter for <code>public.user.password</code>. password */
  @Override
  public void setPassword(String value) {
    set(4, value);
  }

  /** Getter for <code>public.user.avatar</code>. avatar */
  @Override
  public String getAvatar() {
    return (String) get(5);
  }

  /** Setter for <code>public.user.avatar</code>. avatar */
  @Override
  public void setAvatar(String value) {
    set(5, value);
  }

  /** Getter for <code>public.user.create_time</code>. create_time */
  @Override
  public LocalDate getCreateTime() {
    return (LocalDate) get(6);
  }

  /** Setter for <code>public.user.create_time</code>. create_time */
  @Override
  public void setCreateTime(LocalDate value) {
    set(6, value);
  }

  /** Getter for <code>public.user.update_time</code>. update_time */
  @Override
  public LocalDate getUpdateTime() {
    return (LocalDate) get(7);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /** Setter for <code>public.user.update_time</code>. update_time */
  @Override
  public void setUpdateTime(LocalDate value) {
    set(7, value);
  }

  // -------------------------------------------------------------------------
  // Record9 type implementation
  // -------------------------------------------------------------------------

  /** Getter for <code>public.user.deleted</code>. deleted */
  @Override
  public Boolean getDeleted() {
    return (Boolean) get(8);
  }

  /** Setter for <code>public.user.deleted</code>. deleted */
  @Override
  public void setDeleted(Boolean value) {
    set(8, value);
  }

  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  @Override
  public Row9<Long, String, String, String, String, String, LocalDate, LocalDate, Boolean>
      fieldsRow() {
    return (Row9) super.fieldsRow();
  }

  @Override
  public Row9<Long, String, String, String, String, String, LocalDate, LocalDate, Boolean>
      valuesRow() {
    return (Row9) super.valuesRow();
  }

  @Override
  public Field<Long> field1() {
    return User.USER.ID;
  }

  @Override
  public Field<String> field2() {
    return User.USER.EMAIL;
  }

  @Override
  public Field<String> field3() {
    return User.USER.USERNAME;
  }

  @Override
  public Field<String> field4() {
    return User.USER.ACCOUNT;
  }

  @Override
  public Field<String> field5() {
    return User.USER.PASSWORD;
  }

  @Override
  public Field<String> field6() {
    return User.USER.AVATAR;
  }

  @Override
  public Field<LocalDate> field7() {
    return User.USER.CREATE_TIME;
  }

  @Override
  public Field<LocalDate> field8() {
    return User.USER.UPDATE_TIME;
  }

  @Override
  public Field<Boolean> field9() {
    return User.USER.DELETED;
  }

  @Override
  public Long component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getEmail();
  }

  @Override
  public String component3() {
    return getUsername();
  }

  @Override
  public String component4() {
    return getAccount();
  }

  @Override
  public String component5() {
    return getPassword();
  }

  @Override
  public String component6() {
    return getAvatar();
  }

  @Override
  public LocalDate component7() {
    return getCreateTime();
  }

  @Override
  public LocalDate component8() {
    return getUpdateTime();
  }

  @Override
  public Boolean component9() {
    return getDeleted();
  }

  @Override
  public Long value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getEmail();
  }

  @Override
  public String value3() {
    return getUsername();
  }

  @Override
  public String value4() {
    return getAccount();
  }

  @Override
  public String value5() {
    return getPassword();
  }

  @Override
  public String value6() {
    return getAvatar();
  }

  @Override
  public LocalDate value7() {
    return getCreateTime();
  }

  @Override
  public LocalDate value8() {
    return getUpdateTime();
  }

  @Override
  public Boolean value9() {
    return getDeleted();
  }

  @Override
  public UserRecord value1(Long value) {
    setId(value);
    return this;
  }

  @Override
  public UserRecord value2(String value) {
    setEmail(value);
    return this;
  }

  @Override
  public UserRecord value3(String value) {
    setUsername(value);
    return this;
  }

  @Override
  public UserRecord value4(String value) {
    setAccount(value);
    return this;
  }

  @Override
  public UserRecord value5(String value) {
    setPassword(value);
    return this;
  }

  @Override
  public UserRecord value6(String value) {
    setAvatar(value);
    return this;
  }

  @Override
  public UserRecord value7(LocalDate value) {
    setCreateTime(value);
    return this;
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public UserRecord value8(LocalDate value) {
    setUpdateTime(value);
    return this;
  }

  @Override
  public UserRecord value9(Boolean value) {
    setDeleted(value);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  @Override
  public UserRecord values(
      Long value1,
      String value2,
      String value3,
      String value4,
      String value5,
      String value6,
      LocalDate value7,
      LocalDate value8,
      Boolean value9) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    value7(value7);
    value8(value8);
    value9(value9);
    return this;
  }

  @Override
  public void from(IUser from) {
    setId(from.getId());
    setEmail(from.getEmail());
    setUsername(from.getUsername());
    setAccount(from.getAccount());
    setPassword(from.getPassword());
    setAvatar(from.getAvatar());
    setCreateTime(from.getCreateTime());
    setUpdateTime(from.getUpdateTime());
    setDeleted(from.getDeleted());
    resetChangedOnNotNull();
  }

  @Override
  public <E extends IUser> E into(E into) {
    into.from(this);
    return into;
  }
}
