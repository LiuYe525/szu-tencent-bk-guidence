/*
 * This file is generated by jOOQ.
 */
package com.szuse.bkguidance.jooq.tables.pojos;

import com.szuse.bkguidance.jooq.tables.interfaces.IUser;
import java.io.Serializable;
import java.time.LocalDate;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class User implements Serializable, IUser {

  private static final long serialVersionUID = 1L;

  private Long id;
  private String email;
  private String username;
  private String account;
  private String password;
  private String avatar;
  private LocalDate createTime;
  private LocalDate updateTime;
  private Boolean deleted;

  public User() {}

  public User(IUser value) {
    this.id = value.getId();
    this.email = value.getEmail();
    this.username = value.getUsername();
    this.account = value.getAccount();
    this.password = value.getPassword();
    this.avatar = value.getAvatar();
    this.createTime = value.getCreateTime();
    this.updateTime = value.getUpdateTime();
    this.deleted = value.getDeleted();
  }

  public User(
      Long id,
      String email,
      String username,
      String account,
      String password,
      String avatar,
      LocalDate createTime,
      LocalDate updateTime,
      Boolean deleted) {
    this.id = id;
    this.email = email;
    this.username = username;
    this.account = account;
    this.password = password;
    this.avatar = avatar;
    this.createTime = createTime;
    this.updateTime = updateTime;
    this.deleted = deleted;
  }

  /** Getter for <code>public.user.id</code>. userId */
  @Override
  public Long getId() {
    return this.id;
  }

  /** Setter for <code>public.user.id</code>. userId */
  @Override
  public void setId(Long id) {
    this.id = id;
  }

  /** Getter for <code>public.user.email</code>. email */
  @Override
  public String getEmail() {
    return this.email;
  }

  /** Setter for <code>public.user.email</code>. email */
  @Override
  public void setEmail(String email) {
    this.email = email;
  }

  /** Getter for <code>public.user.username</code>. username */
  @Override
  public String getUsername() {
    return this.username;
  }

  /** Setter for <code>public.user.username</code>. username */
  @Override
  public void setUsername(String username) {
    this.username = username;
  }

  /** Getter for <code>public.user.account</code>. account */
  @Override
  public String getAccount() {
    return this.account;
  }

  /** Setter for <code>public.user.account</code>. account */
  @Override
  public void setAccount(String account) {
    this.account = account;
  }

  /** Getter for <code>public.user.password</code>. password */
  @Override
  public String getPassword() {
    return this.password;
  }

  /** Setter for <code>public.user.password</code>. password */
  @Override
  public void setPassword(String password) {
    this.password = password;
  }

  /** Getter for <code>public.user.avatar</code>. avatar */
  @Override
  public String getAvatar() {
    return this.avatar;
  }

  /** Setter for <code>public.user.avatar</code>. avatar */
  @Override
  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }

  /** Getter for <code>public.user.create_time</code>. create_time */
  @Override
  public LocalDate getCreateTime() {
    return this.createTime;
  }

  /** Setter for <code>public.user.create_time</code>. create_time */
  @Override
  public void setCreateTime(LocalDate createTime) {
    this.createTime = createTime;
  }

  /** Getter for <code>public.user.update_time</code>. update_time */
  @Override
  public LocalDate getUpdateTime() {
    return this.updateTime;
  }

  /** Setter for <code>public.user.update_time</code>. update_time */
  @Override
  public void setUpdateTime(LocalDate updateTime) {
    this.updateTime = updateTime;
  }

  /** Getter for <code>public.user.deleted</code>. deleted */
  @Override
  public Boolean getDeleted() {
    return this.deleted;
  }

  /** Setter for <code>public.user.deleted</code>. deleted */
  @Override
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) return true;
    if (obj == null) return false;
    if (getClass() != obj.getClass()) return false;
    final User other = (User) obj;
    if (this.id == null) {
      if (other.id != null) return false;
    } else if (!this.id.equals(other.id)) return false;
    if (this.email == null) {
      if (other.email != null) return false;
    } else if (!this.email.equals(other.email)) return false;
    if (this.username == null) {
      if (other.username != null) return false;
    } else if (!this.username.equals(other.username)) return false;
    if (this.account == null) {
      if (other.account != null) return false;
    } else if (!this.account.equals(other.account)) return false;
    if (this.password == null) {
      if (other.password != null) return false;
    } else if (!this.password.equals(other.password)) return false;
    if (this.avatar == null) {
      if (other.avatar != null) return false;
    } else if (!this.avatar.equals(other.avatar)) return false;
    if (this.createTime == null) {
      if (other.createTime != null) return false;
    } else if (!this.createTime.equals(other.createTime)) return false;
    if (this.updateTime == null) {
      if (other.updateTime != null) return false;
    } else if (!this.updateTime.equals(other.updateTime)) return false;
    if (this.deleted == null) {
      if (other.deleted != null) return false;
    } else if (!this.deleted.equals(other.deleted)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
    result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
    result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
    result = prime * result + ((this.account == null) ? 0 : this.account.hashCode());
    result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
    result = prime * result + ((this.avatar == null) ? 0 : this.avatar.hashCode());
    result = prime * result + ((this.createTime == null) ? 0 : this.createTime.hashCode());
    result = prime * result + ((this.updateTime == null) ? 0 : this.updateTime.hashCode());
    result = prime * result + ((this.deleted == null) ? 0 : this.deleted.hashCode());
    return result;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("User (");

    sb.append(id);
    sb.append(", ").append(email);
    sb.append(", ").append(username);
    sb.append(", ").append(account);
    sb.append(", ").append(password);
    sb.append(", ").append(avatar);
    sb.append(", ").append(createTime);
    sb.append(", ").append(updateTime);
    sb.append(", ").append(deleted);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IUser from) {
    setId(from.getId());
    setEmail(from.getEmail());
    setUsername(from.getUsername());
    setAccount(from.getAccount());
    setPassword(from.getPassword());
    setAvatar(from.getAvatar());
    setCreateTime(from.getCreateTime());
    setUpdateTime(from.getUpdateTime());
    setDeleted(from.getDeleted());
  }

  @Override
  public <E extends IUser> E into(E into) {
    into.from(this);
    return into;
  }
}
